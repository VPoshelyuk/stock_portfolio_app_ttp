{"ast":null,"code":"import _defineProperty from \"/Users/slavaP/Desktop/labs/=MOD4/practice/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/slavaP/Desktop/labs/=MOD4/practice/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/slavaP/Desktop/labs/=MOD4/practice/src/Map.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport MapGL, { GeolocateControl } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nconst TOKEN = 'pk.eyJ1Ijoidi1wYXNoYWxpdWsiLCJhIjoiY2szaGZtMzF1MGM0aDNjbXN3emd2bm9qaiJ9.FDxxP93p6jNROtLNi3TgcQ';\nconst geolocateStyle = {\n  float: 'left',\n  margin: '50px',\n  padding: '10px'\n};\n\nconst Map = () => {\n  const _useState = useState({\n    width: 1200,\n    height: 900,\n    latitude: 0,\n    longitude: 0,\n    zoom: 2\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewport = _useState2[0],\n        setViewPort = _useState2[1];\n\n  const _onViewportChange = viewport => setViewPort(_objectSpread({}, viewport, {\n    transitionDuration: 3000\n  }));\n\n  return React.createElement(\"div\", {\n    style: {\n      margin: '0 200px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '25px',\n      fontWeight: 'bolder'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"GeoLocator: Click To Find Your Location or click \", React.createElement(\"a\", {\n    href: \"/search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"here\"), \" to search for a location\"), React.createElement(MapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: TOKEN,\n    mapStyle: \"mapbox://styles/mapbox/dark-v8\",\n    onViewportChange: _onViewportChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(GeolocateControl, {\n    style: geolocateStyle,\n    positionOptions: {\n      enableHighAccuracy: true\n    },\n    trackUserLocation: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/=MOD4/practice/src/Map.js"],"names":["React","useState","MapGL","GeolocateControl","TOKEN","geolocateStyle","float","margin","padding","Map","width","height","latitude","longitude","zoom","viewport","setViewPort","_onViewportChange","transitionDuration","textAlign","fontSize","fontWeight","enableHighAccuracy"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,IAAeC,gBAAf,QAAuC,cAAvC;AACA,OAAO,8BAAP;AAEA,MAAMC,KAAK,GAAC,gGAAZ;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,MADc;AAErBC,EAAAA,MAAM,EAAE,MAFa;AAGrBC,EAAAA,OAAO,EAAE;AAHY,CAAvB;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBAEiBR,QAAQ,CAAC;AACxCS,IAAAA,KAAK,EAAE,IADiC;AAExCC,IAAAA,MAAM,EAAE,GAFgC;AAGxCC,IAAAA,QAAQ,EAAE,CAH8B;AAIxCC,IAAAA,SAAS,EAAE,CAJ6B;AAKxCC,IAAAA,IAAI,EAAE;AALkC,GAAD,CAFzB;AAAA;AAAA,QAETC,QAFS;AAAA,QAECC,WAFD;;AAUhB,QAAMC,iBAAiB,GAAGF,QAAQ,IAAIC,WAAW,mBAAKD,QAAL;AAAeG,IAAAA,kBAAkB,EAAE;AAAnC,KAAjD;;AAEA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEX,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAACY,MAAAA,SAAS,EAAE,QAAZ;AAAsBC,MAAAA,QAAQ,EAAE,MAAhC;AAAwCC,MAAAA,UAAU,EAAE;AAApD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAA4H;AAAG,IAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA5H,8BADF,EAEE,oBAAC,KAAD,oBACMN,QADN;AAEE,IAAA,oBAAoB,EAAEX,KAFxB;AAGE,IAAA,QAAQ,EAAC,gCAHX;AAIE,IAAA,gBAAgB,EAAEa,iBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAME,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEZ,cADT;AAEE,IAAA,eAAe,EAAE;AAACiB,MAAAA,kBAAkB,EAAE;AAArB,KAFnB;AAGE,IAAA,iBAAiB,EAAE,IAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,CADF;AAiBD,CA7BD;;AA+BA,eAAeb,GAAf","sourcesContent":["import React,{ useState } from 'react'\nimport MapGL, {GeolocateControl } from 'react-map-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nconst TOKEN='pk.eyJ1Ijoidi1wYXNoYWxpdWsiLCJhIjoiY2szaGZtMzF1MGM0aDNjbXN3emd2bm9qaiJ9.FDxxP93p6jNROtLNi3TgcQ'\n\nconst geolocateStyle = {\n  float: 'left',\n  margin: '50px',\n  padding: '10px'\n};\n\nconst Map = () => {\n\n  const [viewport, setViewPort ] = useState({\n    width: 1200,\n    height: 900,\n    latitude: 0,\n    longitude: 0,\n    zoom: 2\n  })\n\n  const _onViewportChange = viewport => setViewPort({...viewport, transitionDuration: 3000 })\n  \n  return (\n    <div style={{ margin: '0 200px'}}>\n      <h1 style={{textAlign: 'center', fontSize: '25px', fontWeight: 'bolder' }}>GeoLocator: Click To Find Your Location or click <a href=\"/search\">here</a> to search for a location</h1>\n      <MapGL\n        {...viewport}\n        mapboxApiAccessToken={TOKEN}\n        mapStyle=\"mapbox://styles/mapbox/dark-v8\"\n        onViewportChange={_onViewportChange}\n      >\n        <GeolocateControl\n          style={geolocateStyle}\n          positionOptions={{enableHighAccuracy: true}}\n          trackUserLocation={true}\n        />\n      </MapGL>\n    </div>\n  )\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}