{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/=MOD4/practice/src/Profile.js\";\nimport React, { Fragment } from \"react\";\nimport FavCard from './FavCard';\nexport default class CardsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fav_events: []\n    };\n\n    this.renderMyFavs = () => {\n      fetch(\"http://localhost:3000/api/v1/ufav_show\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.id\n        })\n      }).then(res => res.json()).then(resp => this.setState({\n        fav_events: resp\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.renderMyFavs();\n  }\n\n  render() {\n    console.log();\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.state.fav_events !== undefined ? React.createElement(\"div\", {\n      className: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Events you added to Favorites:\"), this.state.fav_events.map(event => React.createElement(FavCard, {\n      key: event.Name,\n      event: event,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))) : null);\n  }\n\n} // chooseEvent={this.props.chooseEvent} cardClicked={this.props.cardClicked}","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/=MOD4/practice/src/Profile.js"],"names":["React","Fragment","FavCard","CardsContainer","Component","state","fav_events","renderMyFavs","fetch","method","headers","body","JSON","stringify","user_id","props","currentUser","id","then","res","json","resp","setState","componentDidMount","render","console","log","undefined","map","event","Name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA4C;AAAA;AAAA;AAAA,SACvDC,KADuD,GAC/C;AACJC,MAAAA,UAAU,EAAE;AADR,KAD+C;;AAAA,SASvDC,YATuD,GASxC,MAAM;AACjBC,MAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC5CC,QAAAA,MAAM,EAAE,MADoC;AAE5CC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAFmC;AAM5CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,WAAX,CAAuBC;AADf,SAAf;AANsC,OAA3C,CAAL,CAUKC,IAVL,CAUUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVjB,EAWKF,IAXL,CAWUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAChB,QAAAA,UAAU,EAAEe;AAAb,OAAd,CAXlB;AAYH,KAtBsD;AAAA;;AAKvDE,EAAAA,iBAAiB,GAAE;AACf,SAAKhB,YAAL;AACH;;AAgBDiB,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR;AACA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,KAAL,CAAWC,UAAX,KAA0BqB,SAA1B,GACD;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,EAEK,KAAKtB,KAAL,CAAWC,UAAX,CAAsBsB,GAAtB,CAA0BC,KAAK,IAAI,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,KAAK,CAACC,IAApB;AAA0B,MAAA,KAAK,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC,CAFL,CADC,GAMD,IAPJ,CADJ;AAYH;;AArCsD,C,CAwC3D","sourcesContent":["import React, {Fragment} from \"react\";\nimport FavCard from './FavCard'\n\nexport default class CardsContainer extends React.Component{\n    state = {\n        fav_events: []\n    }\n\n    componentDidMount(){\n        this.renderMyFavs()\n    }\n\n    renderMyFavs = () => {\n        fetch(\"http://localhost:3000/api/v1/ufav_show\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: this.props.currentUser.id\n            })\n            })\n            .then(res => res.json())\n            .then(resp => this.setState({fav_events: resp}))\n    }\n    render(){\n        console.log()\n        return (\n            <Fragment>\n                {this.state.fav_events !== undefined ? \n                <div className=\"cards\">\n                    <h1>Events you added to Favorites:</h1>\n                    {this.state.fav_events.map(event => <FavCard key={event.Name} event={event} />)}\n                    </div>\n                :\n                null\n                }\n            </Fragment>\n        );\n    }\n}\n\n// chooseEvent={this.props.chooseEvent} cardClicked={this.props.cardClicked}"]},"metadata":{},"sourceType":"module"}