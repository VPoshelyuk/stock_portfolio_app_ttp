{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/TTP/stock_portfolio_frontend/src/StocksContainer.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser, updatePortfolio } from './redux/actions/user_actions';\nimport Noty from 'noty';\nimport \"../node_modules/noty/lib/noty.css\";\nimport \"../node_modules/noty/lib/themes/mint.css\";\nimport Stock from \"./Stock\";\n\nclass StocksContainer extends React.Component {\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/user_all\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: this.props.currentUser.id\n      })\n    }).then(res => res.json()).then(response => {\n      console.log(response);\n\n      if (response.error) {\n        new Noty({\n          text: `${response.error}`,\n          layout: \"bottomRight\",\n          type: \"alert\",\n          timeout: 5000,\n          progressBar: false,\n          closeWith: [\"click\", \"button\"]\n        }).show();\n      } else {\n        updatePortfolio(response);\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.portfolio ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.props.portfolio.map(stock => React.createElement(Stock, {\n      key: stock.symbol,\n      stock: stock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))) : React.createElement(\"h1\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.currentUser,\n    portfolio: state.portfolio\n  };\n}\n\nexport default connect(msp, {\n  setUser,\n  updatePortfolio\n})(StocksContainer);","map":{"version":3,"sources":["/Users/slavaP/Desktop/TTP/stock_portfolio_frontend/src/StocksContainer.js"],"names":["React","Fragment","Redirect","connect","setUser","updatePortfolio","Noty","Stock","StocksContainer","Component","componentDidMount","fetch","method","headers","body","JSON","stringify","user_id","props","currentUser","id","then","res","json","response","console","log","error","text","layout","type","timeout","progressBar","closeWith","show","render","portfolio","map","stock","symbol","msp","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,8BAAzC;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,mCAAP;AACA,OAAO,0CAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,eAAN,SAA8BR,KAAK,CAACS,SAApC,CAA6C;AACzCC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAFkC;AAM3CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,WAAX,CAAuBC;AAAjC,OAAf;AANqC,KAA1C,CAAL,CAQCC,IARD,CAQMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARb,EASCF,IATD,CASMG,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,UAAGA,QAAQ,CAACG,KAAZ,EAAkB;AACd,YAAIrB,IAAJ,CAAS;AACLsB,UAAAA,IAAI,EAAG,GAAEJ,QAAQ,CAACG,KAAM,EADnB;AAELE,UAAAA,MAAM,EAAE,aAFH;AAGLC,UAAAA,IAAI,EAAE,OAHD;AAILC,UAAAA,OAAO,EAAE,IAJJ;AAKLC,UAAAA,WAAW,EAAE,KALR;AAMLC,UAAAA,SAAS,EAAE,CAAC,OAAD,EAAU,QAAV;AANN,SAAT,EAOGC,IAPH;AAQH,OATD,MASO;AACH7B,QAAAA,eAAe,CAACmB,QAAD,CAAf;AACH;AACJ,KAvBD;AAwBH;;AAEDW,EAAAA,MAAM,GAAE;AACJ,WACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjB,KAAL,CAAWkB,SAAX,GACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlB,KAAL,CAAWkB,SAAX,CAAqBC,GAArB,CAAyBC,KAAK,IAAI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACC,MAAlB;AAA0B,MAAA,KAAK,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC,CADL,CADH,GAKG;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANR,CADA;AAWH;;AAxCwC;;AA2C7C,SAASE,GAAT,CAAaC,KAAb,EAAmB;AACf,SAAO;AACLtB,IAAAA,WAAW,EAAEsB,KAAK,CAACtB,WADd;AAELiB,IAAAA,SAAS,EAAEK,KAAK,CAACL;AAFZ,GAAP;AAIH;;AAED,eAAejC,OAAO,CAACqC,GAAD,EAAM;AAAEpC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAN,CAAP,CAA2CG,eAA3C,CAAf","sourcesContent":["import React, {Fragment} from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser, updatePortfolio } from './redux/actions/user_actions'\n\nimport Noty from 'noty';  \nimport \"../node_modules/noty/lib/noty.css\";  \nimport \"../node_modules/noty/lib/themes/mint.css\";\nimport Stock from \"./Stock\";\n\nclass StocksContainer extends React.Component{\n    componentDidMount(){\n        fetch(\"http://localhost:3000/api/v1/user_all\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({user_id: this.props.currentUser.id})\n        })\n        .then(res => res.json())\n        .then(response => {\n            console.log(response)\n            if(response.error){\n                new Noty({  \n                    text: `${response.error}`,\n                    layout: \"bottomRight\",\n                    type: \"alert\",\n                    timeout: 5000,\n                    progressBar: false,\n                    closeWith: [\"click\", \"button\"]\n                }).show()\n            } else {\n                updatePortfolio(response)\n            }\n        })\n    }\n\n    render(){\n        return (\n        <Fragment>\n            {this.props.portfolio?\n                <Fragment>\n                    {this.props.portfolio.map(stock => <Stock key={stock.symbol} stock={stock}/>)}\n                </Fragment>\n                :\n                <h1 align=\"center\">Loading...</h1>\n            }\n        </Fragment>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n      currentUser: state.currentUser,\n      portfolio: state.portfolio\n    }\n}\n\nexport default connect(msp, { setUser, updatePortfolio })(StocksContainer)"]},"metadata":{},"sourceType":"module"}