{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/=MOD4/practice/src/MainBody.js\";\nimport React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport IntroVid from './IntroVid';\nimport Map from './Map';\nimport CardsContainer from './CardsContainer';\nimport CardInfo from './CardInfo';\n\nclass MainBody extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showArea: \"\",\n      showLat: 0,\n      showLong: 0,\n      mapClicked: false,\n      randArea: {},\n      loaded: false,\n      chosenEvent: {}\n    };\n\n    this.selectRandArea = areaObj => {\n      this.setState({\n        randArea: areaObj,\n        loaded: true\n      });\n    };\n\n    this.passCoords = (area, lat, long) => {\n      this.setState({\n        showArea: area,\n        showLat: lat,\n        showLong: long,\n        mapClicked: true\n      });\n    };\n\n    this.showEventInfo = event => {\n      this.setState({\n        chosenEvent: event\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, Object.keys(this.state.chosenEvent).length === 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(IntroVid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Events Map by Areas:\"), React.createElement(Map, {\n      passCoords: this.passCoords,\n      selectRandArea: this.selectRandArea,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), this.state.loaded ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.mapClicked ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Events in \", this.state.showArea, \":\"), React.createElement(CardsContainer, {\n      id: 0,\n      lat: this.state.showLat,\n      long: this.state.showLong,\n      showEventInfo: this.showEventInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })) : null, React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Nearest Events:\"), React.createElement(CardsContainer, {\n      id: 1,\n      showEventInfo: this.showEventInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Recomended Free:\"), React.createElement(CardsContainer, {\n      id: 2,\n      showEventInfo: this.showEventInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Picks by Neighbourhood(\", this.state.randArea.area, \"):\"), React.createElement(CardsContainer, {\n      id: 3,\n      showEventInfo: this.showEventInfo,\n      lat: this.state.randArea.geometry.coordinates[1],\n      long: this.state.randArea.geometry.coordinates[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Loading...\")) : React.createElement(Route, {\n      exact: true,\n      path: \"/event\",\n      render: () => React.createElement(CardInfo, {\n        chosenEvent: this.state.chosenEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MainBody;","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/=MOD4/practice/src/MainBody.js"],"names":["React","Fragment","BrowserRouter","Router","Switch","Route","Link","Redirect","IntroVid","Map","CardsContainer","CardInfo","MainBody","Component","state","showArea","showLat","showLong","mapClicked","randArea","loaded","chosenEvent","selectRandArea","areaObj","setState","passCoords","area","lat","long","showEventInfo","event","render","Object","keys","length","geometry","coordinates"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect\n} from \"react-router-dom\"\nimport IntroVid from './IntroVid'\nimport Map from './Map'\nimport CardsContainer from './CardsContainer'\nimport CardInfo from './CardInfo'\n\nclass MainBody extends React.Component {\n    state = {\n        showArea: \"\",\n        showLat: 0,\n        showLong: 0,\n        mapClicked: false,\n        randArea: {},\n        loaded: false,\n        chosenEvent: {}\n    }\n\n    selectRandArea = areaObj => {\n        this.setState({\n            randArea: areaObj,\n            loaded: true\n        })\n    }\n\n    passCoords = (area, lat, long) => {\n        this.setState({\n            showArea: area,\n            showLat: lat,\n            showLong: long,\n            mapClicked: true\n        })\n    }\n\n    showEventInfo= event => {\n        this.setState({\n            chosenEvent: event\n        })\n    }\n\n    render(){\n        return (\n            <div>   \n                {\n                    Object.keys(this.state.chosenEvent).length === 0 ?\n                    <Fragment>\n                        <IntroVid />\n                        <h1 className=\"main_text\">Events Map by Areas:</h1>\n                        <Map passCoords={this.passCoords} selectRandArea={this.selectRandArea}/>\n                        {\n                            this.state.loaded ?\n                            <Fragment>\n                                {\n                                    this.state.mapClicked ?\n                                    <Fragment>\n                                        <h1 className=\"main_text\">Events in {this.state.showArea}:</h1>\n                                        <CardsContainer  id={0} lat={this.state.showLat} long={this.state.showLong} showEventInfo={this.showEventInfo}/>\n                                    </Fragment>\n                                    :\n                                    null\n                                }\n                                <h1 className=\"main_text\">Nearest Events:</h1>\n                                <CardsContainer  id={1} showEventInfo={this.showEventInfo} />\n                                <h1 className=\"main_text\">Recomended Free:</h1>\n                                <CardsContainer id={2} showEventInfo={this.showEventInfo} />\n                                <h1 className=\"main_text\">Picks by Neighbourhood({this.state.randArea.area}):</h1>\n                                <CardsContainer id={3} showEventInfo={this.showEventInfo} lat={this.state.randArea.geometry.coordinates[1]} long={this.state.randArea.geometry.coordinates[0]}/>\n                            </Fragment>\n                            :\n                            <h1>Loading...</h1>\n                        }\n                    </Fragment>\n                    :\n                    <Route exact path=\"/event\" render={()=> <CardInfo chosenEvent={this.state.chosenEvent} />} />\n                }\n            </div>\n        );\n    }\n}\n\nexport default MainBody;"]},"metadata":{},"sourceType":"module"}