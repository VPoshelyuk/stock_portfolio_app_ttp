{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/=MOD4/practice/src/MainBody.js\";\nimport React, { Fragment } from 'react';\nimport IntroVid from './IntroVid';\nimport Map from './Map';\nimport CardsContainer from './CardsContainer';\n\nclass MainBody extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showArea: \"\",\n      showLat: 0,\n      showLong: 0,\n      mapClickCards: 0,\n      randArea: {},\n      loaded: false\n    };\n\n    this.selectRandArea = areaObj => {\n      console.log(\"started\");\n      this.setState({\n        randArea: areaObj,\n        loaded: true\n      }, () => {\n        console.log(\"done\");\n      });\n    };\n\n    this.passCoords = (area, lat, long) => {\n      this.setState({\n        showArea: area,\n        showLat: lat,\n        showLong: long\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.loaded ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(IntroVid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Events Map by Areas:\"), React.createElement(Map, {\n      passCoords: this.passCoords,\n      selectRandArea: this.selectRandArea,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), this.state.mapClickCards !== 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Events in \", this.state.showArea, \":\"), React.createElement(CardsContainer, {\n      id: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })) : null, React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Nearest Events:\"), React.createElement(CardsContainer, {\n      id: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Recomended Free:\"), React.createElement(CardsContainer, {\n      id: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Picks by Neighbourhood(\", this.state.randArea.area, \"):\"), React.createElement(CardsContainer, {\n      id: 3,\n      lat: this.state.randArea.geometry.coordinates[1],\n      long: this.state.randArea.geometry.coordinates[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}\n\nexport default MainBody;","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/=MOD4/practice/src/MainBody.js"],"names":["React","Fragment","IntroVid","Map","CardsContainer","MainBody","Component","state","showArea","showLat","showLong","mapClickCards","randArea","loaded","selectRandArea","areaObj","console","log","setState","passCoords","area","lat","long","render","geometry","coordinates"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport IntroVid from './IntroVid'\nimport Map from './Map'\nimport CardsContainer from './CardsContainer'\n\nclass MainBody extends React.Component {\n    state = {\n        showArea: \"\",\n        showLat: 0,\n        showLong: 0,\n        mapClickCards: 0,\n        randArea: {},\n        loaded: false\n    }\n\n    selectRandArea = areaObj => {\n        console.log(\"started\")\n        this.setState({\n            randArea: areaObj,\n            loaded: true\n        },() => {console.log(\"done\")})\n    }\n\n    passCoords = (area, lat, long) => {\n        this.setState({\n            showArea: area,\n            showLat: lat,\n            showLong: long\n        })\n    }\n\n    render(){\n        return (\n            <div>\n            {\n                this.state.loaded ?\n                <Fragment>\n                    <IntroVid />\n                    <h1 className=\"main_text\">Events Map by Areas:</h1>\n                    <Map passCoords={this.passCoords} selectRandArea={this.selectRandArea}/>\n                    {\n                        this.state.mapClickCards !== 0 ?\n                        <Fragment>\n                            <h1 className=\"main_text\">Events in {this.state.showArea}:</h1>\n                            <CardsContainer  id={0}/>\n                        </Fragment>\n                        :\n                        null\n                    }\n                    <h1 className=\"main_text\">Nearest Events:</h1>\n                    <CardsContainer  id={1}/>\n                    <h1 className=\"main_text\">Recomended Free:</h1>\n                    <CardsContainer id={2}/>\n                    <h1 className=\"main_text\">Picks by Neighbourhood({this.state.randArea.area}):</h1>\n                    <CardsContainer id={3} lat={this.state.randArea.geometry.coordinates[1]} long={this.state.randArea.geometry.coordinates[0]}/>\n                </Fragment>\n                :\n                <h1>Loading...</h1>\n\n            }\n            </div>\n        );\n    }\n}\n\nexport default MainBody;"]},"metadata":{},"sourceType":"module"}