{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/TTP/stock_portfolio_frontend/src/App.js\";\nimport React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport NavBar from './NavBar';\nimport '../src/App.css';\nimport Home from './Home';\nimport LogIn from './LogIn';\nimport SignUp from './SignUp';\nimport LogOut from './LogOut';\nimport Profile from './Profile';\nimport CardInfo from './CardInfo';\nimport EventsContainer from './EventsContainer';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaded: false\n    };\n\n    this.setUser = response => {\n      this.setState({\n        currentUser: response.user\n      }, () => {\n        localStorage.token = response.token;\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentUser: null\n      }, () => {\n        localStorage.removeItem(\"token\");\n      });\n    };\n\n    this.chooseEvent = event => {\n      this.setState({\n        showEvent: event\n      });\n    };\n\n    this.setContainerId = id => {\n      switch (id) {\n        case 0:\n          this.setState({\n            showEvents: this.state.allChoosenAreaEvents\n          });\n          break;\n\n        case 1:\n          this.setState({\n            showEvents: this.state.allNearestEvents\n          });\n          break;\n\n        case 2:\n          this.setState({\n            showEvents: this.state.allFreeEvents\n          });\n          break;\n\n        case 3:\n          this.setState({\n            showEvents: this.state.allRandEvents\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.setAllNearesEvents = events => {\n      this.setState({\n        allNearestEvents: events\n      });\n    };\n\n    this.setAllChoosenEvents = events => {\n      this.setState({\n        allChoosenAreaEvents: events\n      });\n    };\n\n    this.setAllFreeEvents = events => {\n      this.setState({\n        allFreeEvents: events\n      });\n    };\n\n    this.setAllRandEvents = events => {\n      this.setState({\n        allRandEvents: events\n      });\n    };\n\n    this.setMyCoords = (lat, long) => {\n      this.setState({\n        myLat: lat,\n        myLong: long\n      });\n    };\n\n    this.setMyEvents = events => {\n      this.setState({\n        myEvents: events\n      });\n    };\n\n    this.removeEvent = event_name => {\n      this.setState({\n        myEvents: this.state.myEvents.filter(event => event.name !== event_name)\n      });\n    };\n\n    this.addEvent = event => {\n      this.setState({\n        myEvents: [...this.state.myEvents, event]\n      });\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.token;\n    this.setState({\n      loaded: true\n    });\n\n    if (token) {\n      fetch(\"http://localhost:3000/api/v1/auto_login\", {\n        headers: {\n          \"authorization\": token\n        }\n      }).then(res => res.json()).then(response => {\n        if (response.errors) {\n          alert(response.errors);\n        } else {\n          this.setState({\n            currentUser: response\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.loaded ? React.createElement(NavBar, {\n      currentUser: this.state.currentUser,\n      setUser: this.setUser,\n      logout: this.logout,\n      chosenEvent: this.state.showEvent,\n      chooseEvent: this.chooseEvent,\n      setAllNearesEvents: this.setAllNearesEvents,\n      setAllChoosenEvents: this.setAllChoosenEvents,\n      setAllFreeEvents: this.setAllFreeEvents,\n      setAllRandEvents: this.setAllRandEvents,\n      setMyCoords: this.setMyCoords,\n      showEvents: this.state.showEvents,\n      setContainerId: this.setContainerId,\n      setMyEvents: this.setMyEvents,\n      removeEvent: this.removeEvent,\n      addEvent: this.addEvent,\n      myEvents: this.state.myEvents,\n      myLat: this.state.myLat,\n      myLong: this.state.myLong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }) : React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/slavaP/Desktop/TTP/stock_portfolio_frontend/src/App.js"],"names":["React","Fragment","BrowserRouter","Router","Route","Redirect","NavBar","Home","LogIn","SignUp","LogOut","Profile","CardInfo","EventsContainer","App","Component","state","loaded","setUser","response","setState","currentUser","user","localStorage","token","logout","removeItem","chooseEvent","event","showEvent","setContainerId","id","showEvents","allChoosenAreaEvents","allNearestEvents","allFreeEvents","allRandEvents","setAllNearesEvents","events","setAllChoosenEvents","setAllFreeEvents","setAllRandEvents","setMyCoords","lat","long","myLat","myLong","setMyEvents","myEvents","removeEvent","event_name","filter","name","addEvent","componentDidMount","fetch","headers","then","res","json","errors","alert","render","textAlign"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport NavBar from './NavBar'\nimport '../src/App.css'\n\nimport Home from './Home'\nimport LogIn from './LogIn'\nimport SignUp from './SignUp'\nimport LogOut from './LogOut'\nimport Profile from './Profile'\nimport CardInfo from './CardInfo'\nimport EventsContainer from './EventsContainer'\n\n\nexport default class App extends React.Component {\n  // state = {\n  //   currentUser: null,\n\n  //   loaded: false,\n\n  //   showEvent: {},\n\n  //   allNearestEvents: [],\n  //   allChoosenAreaEvents: [],\n  //   allFreeEvents: [],\n  //   allRandEvents: [],\n  //   showEvents: [],\n\n  //   myEvents: [],\n  //   myLat: 0,\n  //   myLong: 0\n  // }\n  state = {\n    loaded:false\n  }\n  componentDidMount(){\n    const token = localStorage.token\n    this.setState({\n      loaded: true\n    })\n    if(token){\n      fetch(\"http://localhost:3000/api/v1/auto_login\", {\n        headers: {\n          \"authorization\": token\n        }\n      })\n      .then(res => res.json())\n      .then(response =>{\n        if (response.errors){\n          alert(response.errors)\n        } else {\n          this.setState({\n            currentUser: response\n          })\n        }\n      })\n    }\n  }\n\n  setUser = (response) => {\n    this.setState({\n      currentUser: response.user\n    }, () => {\n      localStorage.token = response.token\n    })\n  }\n\n  logout = () => {\n    this.setState({\n      currentUser: null\n    }, () => {\n      localStorage.removeItem(\"token\")\n    })\n  }\n\n  chooseEvent= event =>{\n    this.setState({\n      showEvent: event\n    })\n  }\n\n  setContainerId = id => {\n    switch (id) {\n      case 0:\n          this.setState({\n            showEvents: this.state.allChoosenAreaEvents\n          })\n        break;\n      case 1:\n          this.setState({\n            showEvents: this.state.allNearestEvents\n          })\n        break;\n      case 2:\n          this.setState({\n            showEvents: this.state.allFreeEvents\n          })\n        break;\n      case 3:\n        this.setState({\n          showEvents: this.state.allRandEvents\n        })\n      break;\n      default:\n        break;\n    }\n\n  }\n\n  setAllNearesEvents= events =>{\n    this.setState({\n      allNearestEvents: events\n    })\n  }\n\n  setAllChoosenEvents= events =>{\n    this.setState({\n      allChoosenAreaEvents: events\n    })\n  }\n\n  setAllFreeEvents= events =>{\n    this.setState({\n      allFreeEvents: events\n    })\n  }\n\n  setAllRandEvents= events =>{\n    this.setState({\n      allRandEvents: events\n    })\n  }\n\n  setMyCoords= (lat, long) => {\n    this.setState({\n      myLat: lat,\n      myLong: long\n    })\n  }\n\n  setMyEvents= events => {\n    this.setState({\n      myEvents: events\n    })\n  }\n\n  removeEvent = event_name => {\n    this.setState({\n      myEvents: this.state.myEvents.filter(event => event.name !== event_name)\n    })\n  }\n\n  addEvent= event => {\n    this.setState({\n      myEvents: [...this.state.myEvents, event]\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        {\n          this.state.loaded ?\n            <NavBar \n              currentUser={this.state.currentUser} \n              setUser={this.setUser} \n              logout={this.logout} \n              chosenEvent={this.state.showEvent} \n              chooseEvent={this.chooseEvent} \n              setAllNearesEvents={this.setAllNearesEvents}\n              setAllChoosenEvents={this.setAllChoosenEvents}\n              setAllFreeEvents={this.setAllFreeEvents}\n              setAllRandEvents={this.setAllRandEvents}\n              setMyCoords={this.setMyCoords}\n              showEvents={this.state.showEvents}\n              setContainerId={this.setContainerId}\n              setMyEvents={this.setMyEvents}\n              removeEvent={this.removeEvent}\n              addEvent={this.addEvent}\n              myEvents={this.state.myEvents}\n              myLat={this.state.myLat}\n              myLong={this.state.myLong}\n            />\n          :\n            <h1 style={{textAlign: \"center\"}}>Loading...</h1>\n        }\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}