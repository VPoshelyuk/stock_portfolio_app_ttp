{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/=MOD4/practice/src/App.js\";\nimport React, { Fragment } from \"react\";\nimport NavBar from './NavBar';\nimport '../src/App.css';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null,\n      loaded: false,\n      showEvent: {},\n      allNearestEvents: [],\n      allChoosenAreaEvents: [],\n      allFreeEvents: [],\n      allRandEvents: [],\n      showEvents: [],\n      redirect: false\n    };\n\n    this.setUser = response => {\n      this.setState({\n        currentUser: response.user\n      }, () => {\n        localStorage.token = response.token;\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentUser: null\n      }, () => {\n        localStorage.removeItem(\"token\");\n      });\n    };\n\n    this.chooseEvent = event => {\n      this.setState({\n        showEvent: event\n      });\n    };\n\n    this.setContainerId = id => {\n      console.log(id);\n\n      switch (id) {\n        case 0:\n          this.setState({\n            showEvents: this.state.allChoosenAreaEvents,\n            redirect: true\n          });\n          break;\n\n        case 1:\n          this.setState({\n            showEvents: this.state.allNearestEvents,\n            redirect: true\n          });\n          break;\n\n        case 2:\n          this.setState({\n            showEvents: this.state.allFreeEvents,\n            redirect: true\n          });\n          break;\n\n        case 3:\n          this.setState({\n            showEvents: this.state.allRandEvents,\n            redirect: true\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.setAllNearesEvents = events => {\n      this.setState({\n        allNearestEvents: events\n      });\n    };\n\n    this.setAllChoosenEvents = events => {\n      this.setState({\n        allChoosenAreaEvents: events\n      });\n    };\n\n    this.setAllFreeEvents = events => {\n      this.setState({\n        allFreeEvents: events\n      });\n    };\n\n    this.setAllRandEvents = events => {\n      this.setState({\n        allRandEvents: events\n      });\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.token;\n    this.setState({\n      loaded: true\n    });\n\n    if (token) {\n      fetch(\"http://localhost:3000/api/v1/auto_login\", {\n        headers: {\n          \"authorization\": token\n        }\n      }).then(res => res.json()).then(response => {\n        if (response.errors) {\n          alert(response.errors);\n        } else {\n          this.setState({\n            currentUser: response\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, !this.state.redirect ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.loaded ? React.createElement(NavBar, {\n      currentUser: this.state.currentUser,\n      setUser: this.setUser,\n      logout: this.logout,\n      chosenEvent: this.state.showEvent,\n      chooseEvent: this.chooseEvent,\n      setAllNearesEvents: this.setAllNearesEvents,\n      setAllChoosenEvents: this.setAllChoosenEvents,\n      setAllFreeEvents: this.setAllFreeEvents,\n      setAllRandEvents: this.setAllRandEvents,\n      showEvents: this.state.showEvents,\n      setContainerId: this.setContainerId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }) : React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Loading...\")) : React.createElement(Redirect, {\n      to: \"/events\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/=MOD4/practice/src/App.js"],"names":["React","Fragment","NavBar","App","Component","state","currentUser","loaded","showEvent","allNearestEvents","allChoosenAreaEvents","allFreeEvents","allRandEvents","showEvents","redirect","setUser","response","setState","user","localStorage","token","logout","removeItem","chooseEvent","event","setContainerId","id","console","log","setAllNearesEvents","events","setAllChoosenEvents","setAllFreeEvents","setAllRandEvents","componentDidMount","fetch","headers","then","res","json","errors","alert","render","textAlign"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\nimport NavBar from './NavBar'\nimport '../src/App.css'\n\n\nexport default class App extends React.Component {\n  state = {\n    currentUser: null,\n    loaded: false,\n    showEvent: {},\n    allNearestEvents: [],\n    allChoosenAreaEvents: [],\n    allFreeEvents: [],\n    allRandEvents: [],\n    showEvents: [],\n    redirect: false\n  }\n\n  componentDidMount(){\n    const token = localStorage.token\n    this.setState({\n      loaded: true\n    })\n    if(token){\n      fetch(\"http://localhost:3000/api/v1/auto_login\", {\n        headers: {\n          \"authorization\": token\n        }\n      })\n      .then(res => res.json())\n      .then(response =>{\n        if (response.errors){\n          alert(response.errors)\n        } else {\n          this.setState({\n            currentUser: response\n          })\n        }\n      })\n    }\n  }\n\n  setUser = (response) => {\n    this.setState({\n      currentUser: response.user\n    }, () => {\n      localStorage.token = response.token\n    })\n    \n  }\n\n  logout = () => {\n    this.setState({\n      currentUser: null\n    }, () => {\n      localStorage.removeItem(\"token\")\n    })\n  }\n\n  chooseEvent= event =>{\n    this.setState({\n      showEvent: event\n    })\n  }\n\n  setContainerId = id => {\n    console.log(id)\n    switch (id) {\n      case 0:\n          this.setState({\n            showEvents: this.state.allChoosenAreaEvents,\n            redirect: true\n          })\n        break;\n      case 1:\n          this.setState({\n            showEvents: this.state.allNearestEvents,\n            redirect: true\n          })\n        break;\n      case 2:\n          this.setState({\n            showEvents: this.state.allFreeEvents,\n            redirect: true\n          })\n        break;\n      case 3:\n        this.setState({\n          showEvents: this.state.allRandEvents,\n          redirect: true\n        })\n      break;\n      default:\n        break;\n    }\n  }\n\n  setAllNearesEvents= events =>{\n    this.setState({\n      allNearestEvents: events\n    })\n  }\n\n  setAllChoosenEvents= events =>{\n    this.setState({\n      allChoosenAreaEvents: events\n    })\n  }\n\n  setAllFreeEvents= events =>{\n    this.setState({\n      allFreeEvents: events\n    })\n  }\n\n  setAllRandEvents= events =>{\n    this.setState({\n      allRandEvents: events\n    })\n  }\n\n  render(){\n    return (\n      <Fragment>\n      {\n        !this.state.redirect ?\n        <div>\n          {\n            this.state.loaded ?\n              <NavBar \n                currentUser={this.state.currentUser} \n                setUser={this.setUser} \n                logout={this.logout} \n                chosenEvent={this.state.showEvent} \n                chooseEvent={this.chooseEvent} \n                setAllNearesEvents={this.setAllNearesEvents}\n                setAllChoosenEvents={this.setAllChoosenEvents}\n                setAllFreeEvents={this.setAllFreeEvents}\n                setAllRandEvents={this.setAllRandEvents}\n                showEvents={this.state.showEvents}\n                setContainerId={this.setContainerId}\n              />\n            :\n              <h1 style={{textAlign: \"center\"}}>Loading...</h1>\n          }\n        </div>\n        :\n        <Redirect to=\"/events\" />\n\n      }\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}