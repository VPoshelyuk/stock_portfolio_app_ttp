{"ast":null,"code":"import _defineProperty from \"/Users/slavaP/Desktop/labs/=MOD4/practice/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/slavaP/Desktop/labs/=MOD4/practice/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/slavaP/Desktop/labs/=MOD4/practice/src/Map.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport ReactMapGL, { GeolocateControl, Marker, NavigationControl, Popup } from 'react-map-gl'; // import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl'\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nconst TOKEN = 'pk.eyJ1Ijoidi1wYXNoYWxpdWsiLCJhIjoiY2szaGZtMzF1MGM0aDNjbXN3emd2bm9qaiJ9.FDxxP93p6jNROtLNi3TgcQ';\nconst geolocateStyle = {\n  float: 'left',\n  marginTop: '150px',\n  marginLeft: '20px',\n  padding: '10px'\n}; // const markerList=[\n//   {lat: 17.441013,\n//   long: 78.391796,\n//   name: ‚ÄúABC Hospitals‚Äù,\n//   info: 10},\n//   { lat:17.442889,\n//   long: 78.396873,\n//   name: ‚ÄúXYZ Hospitals‚Äù,\n//   info: 20},\n//   {lat: 17.441681,\n//   long: 78.394357,\n//   name: ‚ÄúNRI Hospitals‚Äù,\n//   info: 10}\n//   ];\n\nconst Map = () => {\n  const _useState = useState({\n    width: 1380,\n    height: 700,\n    latitude: 40.75,\n    longitude: -74.0060,\n    //NYC Coordinates \n    zoom: 10\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewport = _useState2[0],\n        setViewPort = _useState2[1];\n\n  const _onViewportChange = viewport => setViewPort(_objectSpread({}, viewport, {\n    transitionDuration: 10\n  }));\n\n  return React.createElement(\"div\", {\n    style: {\n      margin: \"auto\",\n      width: \"1380px\",\n      height: \"400px\",\n      overflow: \"hidden\",\n      borderRadius: \"25px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: TOKEN,\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    onViewportChange: _onViewportChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Marker, {\n    latitude: 40.75,\n    longitude: -74,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onDoubleClick: viewport.latitude === 40.75 && viewport.longitude === -74 ? window.alert('hi') : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"\\uD83E\\uDD3D\\u200D\\u2642\\uFE0F\")), React.createElement(GeolocateControl, {\n    style: geolocateStyle,\n    positionOptions: {\n      enableHighAccuracy: true\n    },\n    trackUserLocation: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/=MOD4/practice/src/Map.js"],"names":["React","useState","ReactMapGL","GeolocateControl","Marker","NavigationControl","Popup","TOKEN","geolocateStyle","float","marginTop","marginLeft","padding","Map","width","height","latitude","longitude","zoom","viewport","setViewPort","_onViewportChange","transitionDuration","margin","overflow","borderRadius","window","alert","enableHighAccuracy"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,IAAmBC,gBAAnB,EAAqCC,MAArC,EAA6CC,iBAA7C,EAAgEC,KAAhE,QAA4E,cAA5E,C,CACA;;AACA,OAAO,8BAAP;AAEA,MAAMC,KAAK,GAAC,gGAAZ;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,MADc;AAErBC,EAAAA,SAAS,EAAE,OAFU;AAGrBC,EAAAA,UAAU,EAAE,MAHS;AAIrBC,EAAAA,OAAO,EAAE;AAJY,CAAvB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,MAAK;AAAA,oBAEkBZ,QAAQ,CAAC;AACxCa,IAAAA,KAAK,EAAE,IADiC;AAExCC,IAAAA,MAAM,EAAE,GAFgC;AAGxCC,IAAAA,QAAQ,EAAE,KAH8B;AAIxCC,IAAAA,SAAS,EAAE,CAAC,OAJ4B;AAInB;AACrBC,IAAAA,IAAI,EAAE;AALkC,GAAD,CAF1B;AAAA;AAAA,QAERC,QAFQ;AAAA,QAEEC,WAFF;;AAWf,QAAMC,iBAAiB,GAAGF,QAAQ,IAAIC,WAAW,mBAAKD,QAAL;AAAeG,IAAAA,kBAAkB,EAAE;AAAnC,KAAjD;;AAEA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBT,MAAAA,KAAK,EAAE,QAAzB;AAAmCC,MAAAA,MAAM,EAAE,OAA3C;AAAoDS,MAAAA,QAAQ,EAAE,QAA9D;AAAwEC,MAAAA,YAAY,EAAE;AAAtF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,oBACMN,QADN;AAEE,IAAA,oBAAoB,EAAEZ,KAFxB;AAGE,IAAA,QAAQ,EAAC,oCAHX;AAIE,IAAA,gBAAgB,EAAEc,iBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAME,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,KAAlB;AAAyB,IAAA,SAAS,EAAE,CAAC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,aAAa,EAAEF,QAAQ,CAACH,QAAT,KAAsB,KAAtB,IAA+BG,QAAQ,CAACF,SAAT,KAAuB,CAAC,EAAvD,GAA4DS,MAAM,CAACC,KAAP,CAAa,IAAb,CAA5D,GAAiF,IAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CANF,EASE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEnB,cADT;AAEE,IAAA,eAAe,EAAE;AAACoB,MAAAA,kBAAkB,EAAE;AAArB,KAFnB;AAGE,IAAA,iBAAiB,EAAE,IAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF;AAoBD,CAjCD;;AAmCA,eAAef,GAAf","sourcesContent":["import React,{ useState } from 'react'\nimport ReactMapGL,{GeolocateControl, Marker, NavigationControl, Popup} from 'react-map-gl'\n// import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nconst TOKEN='pk.eyJ1Ijoidi1wYXNoYWxpdWsiLCJhIjoiY2szaGZtMzF1MGM0aDNjbXN3emd2bm9qaiJ9.FDxxP93p6jNROtLNi3TgcQ'\n\nconst geolocateStyle = {\n  float: 'left',\n  marginTop: '150px',\n  marginLeft: '20px',\n  padding: '10px'\n};\n\n// const markerList=[\n//   {lat: 17.441013,\n//   long: 78.391796,\n//   name: ‚ÄúABC Hospitals‚Äù,\n//   info: 10},\n//   { lat:17.442889,\n//   long: 78.396873,\n//   name: ‚ÄúXYZ Hospitals‚Äù,\n//   info: 20},\n//   {lat: 17.441681,\n//   long: 78.394357,\n//   name: ‚ÄúNRI Hospitals‚Äù,\n//   info: 10}\n//   ];\n\nconst Map = () =>{\n\n  const [viewport, setViewPort ] = useState({\n    width: 1380,\n    height: 700,\n    latitude: 40.75,\n    longitude: -74.0060, //NYC Coordinates \n    zoom: 10\n  })\n\n\n  const _onViewportChange = viewport => setViewPort({...viewport, transitionDuration: 10})\n  \n  return (\n    <div style={{ margin: \"auto\", width: \"1380px\", height: \"400px\", overflow: \"hidden\", borderRadius: \"25px\"}}>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken={TOKEN}\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n        onViewportChange={_onViewportChange}\n      >\n        <Marker latitude={40.75} longitude={-74}>\n          <div onDoubleClick={viewport.latitude === 40.75 && viewport.longitude === -74 ? window.alert('hi') : null} >ü§Ω‚Äç‚ôÇÔ∏è</div>\n        </Marker>\n        <GeolocateControl\n          style={geolocateStyle}\n          positionOptions={{enableHighAccuracy: true}}\n          trackUserLocation={true}\n        />\n      </ReactMapGL>\n    </div>\n\n  )\n}\n\nexport default Map\n\n"]},"metadata":{},"sourceType":"module"}