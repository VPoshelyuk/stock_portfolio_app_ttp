{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/TTP/stock_portfolio_frontend/src/SellComponent.js\";\nimport React, { Fragment } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser, updateBalance } from './redux/actions/user_actions';\nimport Noty from 'noty';\nimport \"../node_modules/noty/lib/noty.css\";\nimport \"../node_modules/noty/lib/themes/mint.css\";\n\nclass SellComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      availableStocks: 0\n    };\n\n    this.handleIncrease = () => {\n      if (this.state.availableStocks < parseInt(this.props.stock.quantity)) {\n        this.setState({\n          availableStocks: this.state.availableStocks + 1\n        });\n      }\n    };\n\n    this.handleDecrease = () => {\n      if (this.state.availableStocks > 1) {\n        this.setState({\n          availableStocks: this.state.availableStocks - 1\n        });\n      }\n    };\n\n    this.handleConfirm = () => {\n      fetch(\"http://localhost:3000/api/v1/user_stocks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.id,\n          ticker: this.props.stock.ticker,\n          quantity: this.props.stock.quantity,\n          price: this.props.stock.current_price,\n          status: \"SELL\"\n        })\n      }).then(res => res.json()).then(response => {\n        if (response.errors) {\n          response.errors.forEach(error => {\n            new Noty({\n              text: `${error}`,\n              layout: \"bottomRight\",\n              type: \"alert\",\n              timeout: 5000,\n              progressBar: false,\n              closeWith: [\"click\", \"button\"]\n            }).show();\n          });\n        } else {\n          fetch(\"http://localhost:3000/api/v1/user_all\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n              user_id: this.props.currentUser.id\n            })\n          }).then(res => res.json()).then(resp => {\n            if (resp.error) {\n              new Noty({\n                text: `${resp.error}`,\n                layout: \"bottomRight\",\n                type: \"alert\",\n                timeout: 5000,\n                progressBar: false,\n                closeWith: [\"click\", \"button\"]\n              }).show();\n            } else {\n              this.props.updatePortfolio(resp);\n            }\n          });\n          new Noty({\n            text: `Successfully bought ${this.state.quantity} stocks of ${this.state.ticker}`,\n            layout: \"bottomRight\",\n            type: \"success\",\n            timeout: 5000,\n            progressBar: false,\n            closeWith: [\"click\", \"button\"]\n          }).show();\n        }\n      });\n      fetch(`http://localhost:3000/api/v1/users/${this.props.currentUser.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          balance: parseFloat(this.props.currentUser.balance - this.state.availableStocks * this.props.stock.current_price).toFixed(2)\n        })\n      }).then(res => res.json()).then(response => {\n        if (response.errors) {\n          response.errors.forEach(error => {\n            new Noty({\n              text: `${error}`,\n              layout: \"bottomRight\",\n              type: \"alert\",\n              timeout: 5000,\n              progressBar: false,\n              closeWith: [\"click\", \"button\"]\n            }).show();\n          });\n        } else {\n          this.props.updateBalance(response.new_balance);\n        }\n      });\n      this.props.triggerPopUp();\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"popup_wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sell_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"sell_form_name\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Do you really want to sell this stock?\"), React.createElement(\"p\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"The stork you chose to sell is: \", this.props.stock.companyName, \"(\", this.props.stock.ticker, \")\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), \"Current price for this stock is: $\", this.props.stock.current_price, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), \"You have \", this.props.stock.quantity, \" available.\"), React.createElement(\"div\", {\n      className: \"sell_wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sell_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        fontSize: \"1.5rem\"\n      },\n      onClick: this.handleDecrease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"p\", {\n      style: {\n        fontSize: \"2rem\",\n        margin: \"0 2vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.availableStocks), React.createElement(\"button\", {\n      style: {\n        fontSize: \"1.5rem\"\n      },\n      onClick: this.handleIncrease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"h1\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"You will earn: $\", parseFloat(this.state.availableStocks * this.props.stock.current_price).toFixed(2)), React.createElement(\"div\", {\n      className: \"sell_buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        fontSize: \"1.5rem\"\n      },\n      onClick: this.handleConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Confirm\"), React.createElement(\"button\", {\n      style: {\n        fontSize: \"1.5rem\"\n      },\n      onClick: () => this.props.triggerPopUp(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nfunction msp(state) {\n  return {\n    currentUser: state.currentUser\n  };\n}\n\nexport default connect(msp, {\n  setUser,\n  updateBalance\n})(SellComponent);","map":{"version":3,"sources":["/Users/slavaP/Desktop/TTP/stock_portfolio_frontend/src/SellComponent.js"],"names":["React","Fragment","Redirect","connect","setUser","updateBalance","Noty","SellComponent","Component","state","availableStocks","handleIncrease","parseInt","props","stock","quantity","setState","handleDecrease","handleConfirm","fetch","method","headers","body","JSON","stringify","user_id","currentUser","id","ticker","price","current_price","status","then","res","json","response","errors","forEach","error","text","layout","type","timeout","progressBar","closeWith","show","resp","updatePortfolio","balance","parseFloat","toFixed","new_balance","triggerPopUp","render","console","log","companyName","fontSize","margin","msp"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser, updateBalance } from './redux/actions/user_actions'\n\nimport Noty from 'noty';  \nimport \"../node_modules/noty/lib/noty.css\";  \nimport \"../node_modules/noty/lib/themes/mint.css\";\n\nclass SellComponent extends React.Component{\n    state = {\n        availableStocks: 0\n    }\n\n    handleIncrease = () => {\n        if(this.state.availableStocks < parseInt(this.props.stock.quantity)){\n            this.setState({\n                availableStocks: this.state.availableStocks + 1\n            })\n        }\n    }\n\n    handleDecrease = () => {\n        if(this.state.availableStocks > 1){\n            this.setState({\n                availableStocks: this.state.availableStocks - 1\n            })\n        }\n    }\n\n    handleConfirm = () => {\n        fetch(\"http://localhost:3000/api/v1/user_stocks\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: this.props.currentUser.id,\n                ticker: this.props.stock.ticker,\n                quantity: this.props.stock.quantity,\n                price: this.props.stock.current_price,\n                status: \"SELL\"\n            })\n        })\n        .then(res => res.json())\n        .then(response => {\n            if(response.errors){\n                response.errors.forEach(error => {\n                    new Noty({  \n                        text: `${error}`,\n                        layout: \"bottomRight\",\n                        type: \"alert\",\n                        timeout: 5000,\n                        progressBar: false,\n                        closeWith: [\"click\", \"button\"]\n                    }).show()\n                });\n            } else {\n                fetch(\"http://localhost:3000/api/v1/user_all\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Accept\": \"application/json\"\n                    },\n                    body: JSON.stringify({user_id: this.props.currentUser.id})\n                })\n                .then(res => res.json())\n                .then(resp => {\n                    if(resp.error){\n                        new Noty({  \n                            text: `${resp.error}`,\n                            layout: \"bottomRight\",\n                            type: \"alert\",\n                            timeout: 5000,\n                            progressBar: false,\n                            closeWith: [\"click\", \"button\"]\n                        }).show()\n                    } else {\n                        this.props.updatePortfolio(resp)\n                    }\n                })\n                new Noty({  \n                    text: `Successfully bought ${this.state.quantity} stocks of ${this.state.ticker}`,\n                    layout: \"bottomRight\",\n                    type: \"success\",\n                    timeout: 5000,\n                    progressBar: false,\n                    closeWith: [\"click\", \"button\"]\n                }).show()\n            }\n        })\n        fetch(`http://localhost:3000/api/v1/users/${this.props.currentUser.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                balance: parseFloat(this.props.currentUser.balance - (this.state.availableStocks * this.props.stock.current_price)).toFixed(2)\n            })\n        })\n        .then(res => res.json())\n        .then(response => {\n            if(response.errors){\n                response.errors.forEach(error => {\n                    new Noty({  \n                        text: `${error}`,\n                        layout: \"bottomRight\",\n                        type: \"alert\",\n                        timeout: 5000,\n                        progressBar: false,\n                        closeWith: [\"click\", \"button\"]\n                    }).show()\n                });\n            } else {\n                this.props.updateBalance(response.new_balance)\n            }\n        })\n        this.props.triggerPopUp()\n    }\n\n\n    render(){\n        console.log(this.props)\n        return (\n        <div className=\"popup_wrap\">\n            <div className=\"sell_card\">\n                <p className=\"sell_form_name\" align=\"center\" >Do you really want to sell this stock?</p>\n                <p align=\"center\">\n                The stork you chose to sell is: {this.props.stock.companyName}({this.props.stock.ticker})<br />\n                Current price for this stock is: ${this.props.stock.current_price}<br />\n                You have {this.props.stock.quantity} available.\n                </p>\n                <div className=\"sell_wrap\">\n                    <div className=\"sell_info\">\n                        <button style={{fontSize: \"1.5rem\"}} onClick={this.handleDecrease}>-</button>\n                        <p style={{fontSize: \"2rem\", margin: \"0 2vw\"}}>{this.state.availableStocks}</p>\n                        <button style={{fontSize: \"1.5rem\"}} onClick={this.handleIncrease}>+</button>\n                    </div>\n                    <h1 align=\"center\">You will earn: ${parseFloat(this.state.availableStocks * this.props.stock.current_price).toFixed(2)}</h1>\n                    <div className=\"sell_buttons\">\n                        <button style={{fontSize: \"1.5rem\"}} onClick={this.handleConfirm}>Confirm</button>\n                        <button style={{fontSize: \"1.5rem\"}} onClick={() => this.props.triggerPopUp()}>Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nfunction msp(state){\n    return {\n      currentUser: state.currentUser\n    }\n}\n\nexport default connect(msp, { setUser, updateBalance })(SellComponent)"]},"metadata":{},"sourceType":"module"}