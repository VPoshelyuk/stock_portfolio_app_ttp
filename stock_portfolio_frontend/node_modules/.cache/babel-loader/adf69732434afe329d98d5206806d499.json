{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/=MOD4/practice/src/Map.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactMapGL, { GeolocateControl, Marker } from 'react-map-gl'; // import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl'\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nconst TOKEN = 'pk.eyJ1Ijoidi1wYXNoYWxpdWsiLCJhIjoiY2szaGZtMzF1MGM0aDNjbXN3emd2bm9qaiJ9.FDxxP93p6jNROtLNi3TgcQ';\nconst geolocateStyle = {\n  float: 'left',\n  // marginTop: '150px',\n  // marginLeft: '20px',\n  padding: '10px'\n};\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewport: {\n        width: 1380,\n        height: 400,\n        latitude: 40.75,\n        longitude: -74.0060,\n        //NYC Coordinates \n        zoom: 10\n      },\n      areas: []\n    };\n\n    this.getMarkerInfo = e => {\n      e.persist();\n      console.log(e.target.id);\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:4000/areas').then(resp => resp.json()).then(fetchedAreas => this.setState({\n      areas: fetchedAreas\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        margin: \"auto\",\n        width: \"1380px\",\n        height: \"400px\",\n        overflow: \"hidden\",\n        borderRadius: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(ReactMapGL, Object.assign({}, this.state.viewport, {\n      mapboxApiAccessToken: TOKEN,\n      mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      maxZoom: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), this.state.areas.map(area => React.createElement(Marker, {\n      latitude: area.geometry.coordinates[1],\n      longitude: area.geometry.coordinates[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      onClick: this.getMarkerInfo,\n      id: area.area,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\uD83D\\uDDBC\"))), React.createElement(GeolocateControl, {\n      style: geolocateStyle,\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/=MOD4/practice/src/Map.js"],"names":["React","useState","useEffect","ReactMapGL","GeolocateControl","Marker","TOKEN","geolocateStyle","float","padding","Map","Component","state","viewport","width","height","latitude","longitude","zoom","areas","getMarkerInfo","e","persist","console","log","target","id","componentDidMount","fetch","then","resp","json","fetchedAreas","setState","render","margin","overflow","borderRadius","map","area","geometry","coordinates","enableHighAccuracy"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,UAAP,IAAmBC,gBAAnB,EAAqCC,MAArC,QAAkD,cAAlD,C,CACA;;AACA,OAAO,8BAAP;AAEA,MAAMC,KAAK,GAAC,gGAAZ;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,MADc;AAErB;AACA;AACAC,EAAAA,OAAO,EAAE;AAJY,CAAvB;;AAOA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAC;AACPC,QAAAA,KAAK,EAAE,IADA;AAEPC,QAAAA,MAAM,EAAE,GAFD;AAGPC,QAAAA,QAAQ,EAAE,KAHH;AAIPC,QAAAA,SAAS,EAAE,CAAC,OAJL;AAIc;AACrBC,QAAAA,IAAI,EAAE;AALC,OADH;AAQNC,MAAAA,KAAK,EAAE;AARD,KADuB;;AAAA,SAkB/BC,aAlB+B,GAkBfC,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,OAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,EAArB;AACD,KArB8B;AAAA;;AAY/BC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,YAAY,IAAI,KAAKC,QAAL,CAAc;AAACd,MAAAA,KAAK,EAAEa;AAAR,KAAd,CAFtB;AAGD;;AAODE,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBrB,QAAAA,KAAK,EAAE,QAAzB;AAAmCC,QAAAA,MAAM,EAAE,OAA3C;AAAoDqB,QAAAA,QAAQ,EAAE,QAA9D;AAAwEC,QAAAA,YAAY,EAAE;AAAtF,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD,oBACM,KAAKzB,KAAL,CAAWC,QADjB;AAEE,MAAA,oBAAoB,EAAEP,KAFxB;AAGE,MAAA,QAAQ,EAAC,oCAHX;AAIE,MAAA,gBAAgB,EAAEO,QAAQ,IAAI,KAAKoB,QAAL,CAAc;AAACpB,QAAAA;AAAD,OAAd,CAJhC;AAKE,MAAA,OAAO,EAAE,EALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOG,KAAKD,KAAL,CAAWO,KAAX,CAAiBmB,GAAjB,CAAqBC,IAAI,IAAI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEA,IAAI,CAACC,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAAlB;AAAgD,MAAA,SAAS,EAAEF,IAAI,CAACC,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyF;AAAG,MAAA,OAAO,EAAE,KAAKrB,aAAjB;AAAgC,MAAA,EAAE,EAAEmB,IAAI,CAACA,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAzF,CAA7B,CAPH,EASE,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAEhC,cADT;AAEE,MAAA,eAAe,EAAE;AAACmC,QAAAA,kBAAkB,EAAE;AAArB,OAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CADF;AAmBD;;AA3C8B;;AA8CjC,eAAehC,GAAf","sourcesContent":["import React,{ useState, useEffect } from 'react'\nimport ReactMapGL,{GeolocateControl, Marker} from 'react-map-gl'\n// import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nconst TOKEN='pk.eyJ1Ijoidi1wYXNoYWxpdWsiLCJhIjoiY2szaGZtMzF1MGM0aDNjbXN3emd2bm9qaiJ9.FDxxP93p6jNROtLNi3TgcQ'\n\nconst geolocateStyle = {\n  float: 'left',\n  // marginTop: '150px',\n  // marginLeft: '20px',\n  padding: '10px'\n};\n\nclass Map extends React.Component{\n  state = {\n    viewport:{\n      width: 1380,\n      height: 400,\n      latitude: 40.75,\n      longitude: -74.0060, //NYC Coordinates \n      zoom: 10\n    },\n    areas: []\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:4000/areas')\n    .then(resp => resp.json())\n    .then(fetchedAreas => this.setState({areas: fetchedAreas}))\n  }\n\n  getMarkerInfo = e => {\n    e.persist()\n    console.log(e.target.id)\n  }\n  \n  render(){\n    return (\n      <div style={{ margin: \"auto\", width: \"1380px\", height: \"400px\", overflow: \"hidden\", borderRadius: \"25px\"}}>\n        <ReactMapGL\n          {...this.state.viewport}\n          mapboxApiAccessToken={TOKEN}\n          mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n          onViewportChange={viewport => this.setState({viewport})}\n          maxZoom={13}\n        >\n          {this.state.areas.map(area => <Marker latitude={area.geometry.coordinates[1]} longitude={area.geometry.coordinates[0]}><p onClick={this.getMarkerInfo} id={area.area}>ğŸ–¼</p></Marker>)}\n        \n          <GeolocateControl\n            style={geolocateStyle}\n            positionOptions={{enableHighAccuracy: true}}\n          />\n        </ReactMapGL>\n      </div>\n  \n    )\n  }\n}\n\nexport default Map\n\n"]},"metadata":{},"sourceType":"module"}