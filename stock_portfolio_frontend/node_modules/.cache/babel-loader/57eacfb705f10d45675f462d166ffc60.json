{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/=MOD4/practice/src/MainBody.js\";\nimport React, { Fragment } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport IntroVid from './IntroVid';\nimport Map from './Map';\nimport CardsContainer from './CardsContainer';\n\nclass MainBody extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showArea: \"\",\n      showLat: 0,\n      showLong: 0,\n      mapClicked: false,\n      areaSelected: false,\n      randArea: {},\n      loaded: false,\n      clicked: false,\n      chosenEvent: {}\n    };\n\n    this.selectRandArea = areaObj => {\n      this.setState({\n        randArea: areaObj,\n        loaded: true\n      });\n    };\n\n    this.passCoords = (area, lat, long) => {\n      this.setState({\n        showArea: area,\n        showLat: lat,\n        showLong: long,\n        mapClicked: true,\n        areaSelected: true\n      });\n    };\n\n    this.cardClicked = () => {\n      this.setState({\n        clicked: true\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, !this.state.clicked ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(IntroVid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Events Map by Areas:\"), React.createElement(Map, {\n      passCoords: this.passCoords,\n      selectRandArea: this.selectRandArea,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), this.state.loaded ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.mapClicked ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Events in \", this.state.showArea, \":\"), React.createElement(CardsContainer, {\n      id: 0,\n      lat: this.state.showLat,\n      long: this.state.showLong,\n      setAllChoosenEvents: this.props.setAllChoosenEvents,\n      setContainerId: this.props.setContainerId,\n      chooseEvent: this.props.chooseEvent,\n      cardClicked: this.cardClicked,\n      areaSelected: this.areaSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })) : null, React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Nearest Events:\"), React.createElement(CardsContainer, {\n      id: 1,\n      setAllNearesEvents: this.props.setAllNearesEvents,\n      setContainerId: this.props.setContainerId,\n      chooseEvent: this.props.chooseEvent,\n      cardClicked: this.cardClicked,\n      setMyCoords: this.props.setMyCoords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Recomended Free:\"), React.createElement(CardsContainer, {\n      id: 2,\n      setAllFreeEvents: this.props.setAllFreeEvents,\n      setContainerId: this.props.setContainerId,\n      chooseEvent: this.props.chooseEvent,\n      cardClicked: this.cardClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"main_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Picks by Neighbourhood(\", this.state.randArea.area, \"):\"), React.createElement(CardsContainer, {\n      id: 3,\n      lat: this.state.randArea.geometry.coordinates[1],\n      long: this.state.randArea.geometry.coordinates[0],\n      setAllRandEvents: this.props.setAllRandEvents,\n      setContainerId: this.props.setContainerId,\n      chooseEvent: this.props.chooseEvent,\n      cardClicked: this.cardClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Loading...\")) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Redirect, {\n      to: \"/event\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MainBody;","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/=MOD4/practice/src/MainBody.js"],"names":["React","Fragment","Redirect","IntroVid","Map","CardsContainer","MainBody","Component","state","showArea","showLat","showLong","mapClicked","areaSelected","randArea","loaded","clicked","chosenEvent","selectRandArea","areaObj","setState","passCoords","area","lat","long","cardClicked","render","props","setAllChoosenEvents","setContainerId","chooseEvent","setAllNearesEvents","setMyCoords","setAllFreeEvents","geometry","coordinates","setAllRandEvents"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport { Redirect } from \"react-router-dom\"\nimport IntroVid from './IntroVid'\nimport Map from './Map'\nimport CardsContainer from './CardsContainer'\n\nclass MainBody extends React.Component {\n    state = {\n        showArea: \"\",\n        showLat: 0,\n        showLong: 0,\n        mapClicked: false,\n        areaSelected: false,\n        randArea: {},\n        loaded: false,\n        clicked: false,\n        chosenEvent: {}\n    }\n\n    selectRandArea = areaObj => {\n        this.setState({\n            randArea: areaObj,\n            loaded: true\n        })\n    }\n\n    passCoords = (area, lat, long) => {\n        this.setState({\n            showArea: area,\n            showLat: lat,\n            showLong: long,\n            mapClicked: true,\n            areaSelected: true\n        })\n    }\n    cardClicked = () => {\n        this.setState({\n            clicked: true\n        })\n    }\n\n    render(){\n        return (\n            <div>   \n                {\n                    !this.state.clicked ?\n                    <Fragment>\n                        <IntroVid />\n                        <h1 className=\"main_text\">Events Map by Areas:</h1>\n                        <Map passCoords={this.passCoords} selectRandArea={this.selectRandArea}/>\n                        {\n                            this.state.loaded ?\n                            <Fragment>\n                                {\n                                    this.state.mapClicked ?\n                                    <Fragment>\n                                        <h1 className=\"main_text\">Events in {this.state.showArea}:</h1>\n                                        <CardsContainer  \n                                            id={0} \n                                            lat={this.state.showLat} \n                                            long={this.state.showLong} \n                                            setAllChoosenEvents={this.props.setAllChoosenEvents}\n                                            setContainerId={this.props.setContainerId}\n                                            chooseEvent={this.props.chooseEvent}\n                                            cardClicked={this.cardClicked}\n                                            areaSelected={this.areaSelected}\n                                            />\n                                    </Fragment>\n                                    :\n                                    null\n                                }\n                                <h1 className=\"main_text\">Nearest Events:</h1>\n                                <CardsContainer  \n                                    id={1} \n                                    setAllNearesEvents={this.props.setAllNearesEvents}\n                                    setContainerId={this.props.setContainerId}\n                                    chooseEvent={this.props.chooseEvent}\n                                    cardClicked={this.cardClicked}\n                                    setMyCoords={this.props.setMyCoords}\n                                />\n                                <h1 className=\"main_text\">Recomended Free:</h1>\n                                <CardsContainer\n                                    id={2} \n                                    setAllFreeEvents={this.props.setAllFreeEvents}\n                                    setContainerId={this.props.setContainerId}\n                                    chooseEvent={this.props.chooseEvent}\n                                    cardClicked={this.cardClicked}\n                                    />\n                                <h1 className=\"main_text\">Picks by Neighbourhood({this.state.randArea.area}):</h1>\n                                <CardsContainer \n                                    id={3} \n                                    lat={this.state.randArea.geometry.coordinates[1]} \n                                    long={this.state.randArea.geometry.coordinates[0]}\n                                    setAllRandEvents={this.props.setAllRandEvents}\n                                    setContainerId={this.props.setContainerId}\n                                    chooseEvent={this.props.chooseEvent}\n                                    cardClicked={this.cardClicked}\n                                />\n                            </Fragment>\n                            :\n                            <h1>Loading...</h1>\n                        }\n                    </Fragment>\n                    :\n                    <Fragment>\n                        <Redirect to=\"/event\"/>\n                    </Fragment>\n                }\n            </div>\n        );\n    }\n}\n\nexport default MainBody;"]},"metadata":{},"sourceType":"module"}