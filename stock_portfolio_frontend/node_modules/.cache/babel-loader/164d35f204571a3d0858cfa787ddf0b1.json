{"ast":null,"code":"var _jsxFileName = \"/Users/slavaP/Desktop/labs/=MOD4/practice/src/App.js\";\nimport React from \"react\";\nimport NavBar from './NavBar';\nimport '../src/App.css';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null,\n      loaded: false,\n      showEvent: {},\n      allNearestEvents: [],\n      allChoosenAreaEvents: [],\n      allFreeEvents: [],\n      allRandEvents: [],\n      showEvents: []\n    };\n\n    this.setUser = response => {\n      this.setState({\n        currentUser: response.user\n      }, () => {\n        localStorage.token = response.token;\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentUser: null\n      }, () => {\n        localStorage.removeItem(\"token\");\n      });\n    };\n\n    this.chooseEvent = event => {\n      this.setState({\n        showEvent: event\n      });\n    };\n\n    this.setContainerId = id => {\n      switch (id) {\n        case 0:\n          this.setState({\n            container_id: id\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.setAllNearesEvents = events => {\n      this.setState({\n        allNearestEvents: events\n      });\n    };\n\n    this.setAllChoosenEvents = events => {\n      this.setState({\n        allChoosenAreaEvents: events\n      });\n    };\n\n    this.setAllFreeEvents = events => {\n      this.setState({\n        allFreeEvents: events\n      });\n    };\n\n    this.setAllRandEvents = events => {\n      this.setState({\n        allRandEvents: events\n      });\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.token;\n    this.setState({\n      loaded: true\n    });\n\n    if (token) {\n      fetch(\"http://localhost:3000/api/v1/auto_login\", {\n        headers: {\n          \"authorization\": token\n        }\n      }).then(res => res.json()).then(response => {\n        if (response.errors) {\n          alert(response.errors);\n        } else {\n          this.setState({\n            currentUser: response\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.loaded ? React.createElement(NavBar, {\n      currentUser: this.state.currentUser,\n      setUser: this.setUser,\n      logout: this.logout,\n      chosenEvent: this.state.showEvent,\n      chooseEvent: this.chooseEvent,\n      setAllNearesEvents: this.setAllNearesEvents,\n      setAllChoosenEvents: this.setAllChoosenEvents,\n      setAllFreeEvents: this.setAllFreeEvents,\n      setAllRandEvents: this.setAllRandEvents,\n      allNearestEvents: this.state.allNearestEvents,\n      allChoosenAreaEvents: this.state.allChoosenAreaEvents,\n      allFreeEvents: this.state.allFreeEvents,\n      allRandEvents: this.state.allRandEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }) : React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/slavaP/Desktop/labs/=MOD4/practice/src/App.js"],"names":["React","NavBar","App","Component","state","currentUser","loaded","showEvent","allNearestEvents","allChoosenAreaEvents","allFreeEvents","allRandEvents","showEvents","setUser","response","setState","user","localStorage","token","logout","removeItem","chooseEvent","event","setContainerId","id","container_id","setAllNearesEvents","events","setAllChoosenEvents","setAllFreeEvents","setAllRandEvents","componentDidMount","fetch","headers","then","res","json","errors","alert","render","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NavBar from './NavBar'\nimport '../src/App.css'\n\n\nexport default class App extends React.Component {\n  state = {\n    currentUser: null,\n    loaded: false,\n    showEvent: {},\n    allNearestEvents: [],\n    allChoosenAreaEvents: [],\n    allFreeEvents: [],\n    allRandEvents: [],\n    showEvents: []\n  }\n\n  componentDidMount(){\n    const token = localStorage.token\n    this.setState({\n      loaded: true\n    })\n    if(token){\n      fetch(\"http://localhost:3000/api/v1/auto_login\", {\n        headers: {\n          \"authorization\": token\n        }\n      })\n      .then(res => res.json())\n      .then(response =>{\n        if (response.errors){\n          alert(response.errors)\n        } else {\n          this.setState({\n            currentUser: response\n          })\n        }\n      })\n    }\n  }\n\n  setUser = (response) => {\n    this.setState({\n      currentUser: response.user\n    }, () => {\n      localStorage.token = response.token\n    })\n    \n  }\n\n  logout = () => {\n    this.setState({\n      currentUser: null\n    }, () => {\n      localStorage.removeItem(\"token\")\n    })\n  }\n\n  chooseEvent= event =>{\n    this.setState({\n      showEvent: event\n    })\n  }\n\n  setContainerId = id => {\n    switch (id) {\n      case 0:\n          this.setState({\n            container_id: id\n          })\n        break;\n    \n      default:\n        break;\n    }\n  }\n\n  setAllNearesEvents= events =>{\n    this.setState({\n      allNearestEvents: events\n    })\n  }\n\n  setAllChoosenEvents= events =>{\n    this.setState({\n      allChoosenAreaEvents: events\n    })\n  }\n\n  setAllFreeEvents= events =>{\n    this.setState({\n      allFreeEvents: events\n    })\n  }\n\n  setAllRandEvents= events =>{\n    this.setState({\n      allRandEvents: events\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        {\n          this.state.loaded ?\n            <NavBar \n              currentUser={this.state.currentUser} \n              setUser={this.setUser} \n              logout={this.logout} \n              chosenEvent={this.state.showEvent} \n              chooseEvent={this.chooseEvent} \n              setAllNearesEvents={this.setAllNearesEvents}\n              setAllChoosenEvents={this.setAllChoosenEvents}\n              setAllFreeEvents={this.setAllFreeEvents}\n              setAllRandEvents={this.setAllRandEvents}\n              allNearestEvents={this.state.allNearestEvents}\n              allChoosenAreaEvents={this.state.allChoosenAreaEvents}\n              allFreeEvents={this.state.allFreeEvents}\n              allRandEvents={this.state.allRandEvents}\n            />\n          :\n            <h1 style={{textAlign: \"center\"}}>Loading...</h1>\n        }\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}